name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    name: Python ${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox tox-gh-actions

      - name: Set up cache
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            .tox
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('tox.ini') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: timeout 10s pip --version || rm -rf .tox
      - run: tox

  build:
    needs: test
    runs-on: ubuntu-latest

    name: Publish to PyPi

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry

      - name: Set up cache
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            .venv
          key: ${{ runner.os }}-python3.9-${{ hashFiles('poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: timeout 10s poetry run pip --version || rm -rf .venv

      - run: poetry install
      - run: poetry build
      - run: poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
      - run: poetry publish

      - name: Run generate-changelog
        id: generate-changelog
        uses: autowarefoundation/autoware-github-actions/generate-changelog@v1

      - name: Release ðŸŽ“
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.GITHUB_REF_NAME }}
          body: ${{ steps.generate-changelog.outputs.changelog }}
          fail_on_unmatched_files: true
          files: |
            dist/wagtail*
